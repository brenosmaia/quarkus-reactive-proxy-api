# Database
quarkus.datasource.db-kind=h2
quarkus.datasource.username=sa
quarkus.datasource.password=sa
quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb

# Hibernate
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true

# Redis
quarkus.redis.hosts=redis://localhost:6379

# HTTP
quarkus.http.port=9999

# OpenAPI
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui

# Logging
quarkus.log.level=INFO

# REST Client Configuration - Default Processor
com.brenosmaia.rinha25.client.DefaultPaymentProcessorClient/mp-rest/url=http://localhost:8001
com.brenosmaia.rinha25.client.DefaultPaymentProcessorClient/mp-rest/scope=jakarta.inject.Singleton
com.brenosmaia.rinha25.client.DefaultPaymentsSummaryClient/mp-rest/url=http://localhost:8001
com.brenosmaia.rinha25.client.DefaultPaymentsSummaryClient/mp-rest/scope=jakarta.inject.Singleton

# REST Client Configuration - Fallback Processor  
com.brenosmaia.rinha25.client.FallbackPaymentProcessorClient/mp-rest/url=http://localhost:8002
com.brenosmaia.rinha25.client.FallbackPaymentProcessorClient/mp-rest/scope=jakarta.inject.Singleton 
com.brenosmaia.rinha25.client.FallbackPaymentsSummaryClient/mp-rest/url=http://localhost:8002
com.brenosmaia.rinha25.client.FallbackPaymentsSummaryClient/mp-rest/scope=jakarta.inject.Singleton
